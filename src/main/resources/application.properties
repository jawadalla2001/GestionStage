spring.application.name=GestionStage
spring.datasource.url=jdbc:mysql://localhost:3306/gestion_stage?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Définit comment Hibernate gère le schéma de la base de données
# Options possibles:
# - create-drop: Supprime et recrée le schéma à chaque démarrage (utile pour réinitialiser la base)
# - create: Crée le schéma à chaque démarrage (supprime les données existantes)
# - update: Met à jour le schéma si nécessaire, sans supprimer les données (pour production)
# - validate: Vérifie seulement que le schéma correspond, sans faire de modifications
# 
# IMPORTANT: Changé de 'create-drop' à 'update' pour préserver les données entre les redémarrages.
spring.jpa.hibernate.ddl-auto=update

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Configuration pour Swagger API documentation
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method

# Logging
logging.level.org.springframework=INFO
logging.level.com.gestion.stage=DEBUG

# Server port
server.port=8081

# Cross-Origin Resource Sharing
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE
spring.web.cors.allowed-headers=*
